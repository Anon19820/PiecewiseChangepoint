// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// surv_nochange
NumericMatrix surv_nochange(NumericVector time, int num_zero, NumericVector lambda_df);
RcppExport SEXP _PiecewiseChangepoint_surv_nochange(SEXP timeSEXP, SEXP num_zeroSEXP, SEXP lambda_dfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type time(timeSEXP);
    Rcpp::traits::input_parameter< int >::type num_zero(num_zeroSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lambda_df(lambda_dfSEXP);
    rcpp_result_gen = Rcpp::wrap(surv_nochange(time, num_zero, lambda_df));
    return rcpp_result_gen;
END_RCPP
}
// surv_change
NumericMatrix surv_change(NumericVector time, int nrow_curr, NumericMatrix lambda_df, NumericMatrix changepoint_df, NumericMatrix surv_df);
RcppExport SEXP _PiecewiseChangepoint_surv_change(SEXP timeSEXP, SEXP nrow_currSEXP, SEXP lambda_dfSEXP, SEXP changepoint_dfSEXP, SEXP surv_dfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type time(timeSEXP);
    Rcpp::traits::input_parameter< int >::type nrow_curr(nrow_currSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type lambda_df(lambda_dfSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type changepoint_df(changepoint_dfSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type surv_df(surv_dfSEXP);
    rcpp_result_gen = Rcpp::wrap(surv_change(time, nrow_curr, lambda_df, changepoint_df, surv_df));
    return rcpp_result_gen;
END_RCPP
}
// exposure_death_alt
NumericMatrix exposure_death_alt(NumericMatrix total_time_diff, IntegerVector change_nums);
RcppExport SEXP _PiecewiseChangepoint_exposure_death_alt(SEXP total_time_diffSEXP, SEXP change_numsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type total_time_diff(total_time_diffSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type change_nums(change_numsSEXP);
    rcpp_result_gen = Rcpp::wrap(exposure_death_alt(total_time_diff, change_nums));
    return rcpp_result_gen;
END_RCPP
}
// margin_lik_calc_log
double margin_lik_calc_log(NumericMatrix time_diffs, IntegerVector k_indexes, double alpha, double beta);
RcppExport SEXP _PiecewiseChangepoint_margin_lik_calc_log(SEXP time_diffsSEXP, SEXP k_indexesSEXP, SEXP alphaSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type time_diffs(time_diffsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type k_indexes(k_indexesSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(margin_lik_calc_log(time_diffs, k_indexes, alpha, beta));
    return rcpp_result_gen;
END_RCPP
}
// pos_prob
double pos_prob(IntegerVector k_indexes, int n_events, LogicalVector MLE);
RcppExport SEXP _PiecewiseChangepoint_pos_prob(SEXP k_indexesSEXP, SEXP n_eventsSEXP, SEXP MLESEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type k_indexes(k_indexesSEXP);
    Rcpp::traits::input_parameter< int >::type n_events(n_eventsSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type MLE(MLESEXP);
    rcpp_result_gen = Rcpp::wrap(pos_prob(k_indexes, n_events, MLE));
    return rcpp_result_gen;
END_RCPP
}
// RJMCM_core
List RJMCM_core(IntegerMatrix k, int max_breaks, NumericMatrix time_diffs, LogicalVector MLE, double alpha, double beta1, double beta2, int lambda);
RcppExport SEXP _PiecewiseChangepoint_RJMCM_core(SEXP kSEXP, SEXP max_breaksSEXP, SEXP time_diffsSEXP, SEXP MLESEXP, SEXP alphaSEXP, SEXP beta1SEXP, SEXP beta2SEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type max_breaks(max_breaksSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type time_diffs(time_diffsSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type MLE(MLESEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta1(beta1SEXP);
    Rcpp::traits::input_parameter< double >::type beta2(beta2SEXP);
    Rcpp::traits::input_parameter< int >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(RJMCM_core(k, max_breaks, time_diffs, MLE, alpha, beta1, beta2, lambda));
    return rcpp_result_gen;
END_RCPP
}
// Gibbs_core
List Gibbs_core(IntegerMatrix k, int num_breaks, NumericMatrix time_diffs, NumericMatrix alpha_array, NumericMatrix beta_array, LogicalVector MLE, double alpha, double beta);
RcppExport SEXP _PiecewiseChangepoint_Gibbs_core(SEXP kSEXP, SEXP num_breaksSEXP, SEXP time_diffsSEXP, SEXP alpha_arraySEXP, SEXP beta_arraySEXP, SEXP MLESEXP, SEXP alphaSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type num_breaks(num_breaksSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type time_diffs(time_diffsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type alpha_array(alpha_arraySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type beta_array(beta_arraySEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type MLE(MLESEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(Gibbs_core(k, num_breaks, time_diffs, alpha_array, beta_array, MLE, alpha, beta));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_PiecewiseChangepoint_surv_nochange", (DL_FUNC) &_PiecewiseChangepoint_surv_nochange, 3},
    {"_PiecewiseChangepoint_surv_change", (DL_FUNC) &_PiecewiseChangepoint_surv_change, 5},
    {"_PiecewiseChangepoint_exposure_death_alt", (DL_FUNC) &_PiecewiseChangepoint_exposure_death_alt, 2},
    {"_PiecewiseChangepoint_margin_lik_calc_log", (DL_FUNC) &_PiecewiseChangepoint_margin_lik_calc_log, 4},
    {"_PiecewiseChangepoint_pos_prob", (DL_FUNC) &_PiecewiseChangepoint_pos_prob, 3},
    {"_PiecewiseChangepoint_RJMCM_core", (DL_FUNC) &_PiecewiseChangepoint_RJMCM_core, 8},
    {"_PiecewiseChangepoint_Gibbs_core", (DL_FUNC) &_PiecewiseChangepoint_Gibbs_core, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_PiecewiseChangepoint(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
